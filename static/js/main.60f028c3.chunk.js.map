{"version":3,"sources":["components/Participant/Participant.js","components/Spectator/Spectator.js","components/App/App.js","index.js"],"names":["Participant","className","name","rest","useState","id","setId","value","setValue","a","fetch","process","method","headers","body","JSON","stringify","useEffect","eventSource","EventSource","encodeURIComponent","onmessage","event","parse","data","close","classNames","map","option","type","style","background","undefined","onClick","send","disabled","Spectator","onSubmitName","estimations","setEstimations","inputRef","useRef","onSubmit","preventDefault","current","ref","App","setName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA8CeA,MA3Cf,YAAoD,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,KAASC,EAAQ,sCAC7BC,mBAAS,GADoB,mBAC1CC,EAD0C,KACtCC,EADsC,OAEvBF,qBAFuB,mBAE1CG,EAF0C,KAEnCC,EAFmC,iDAgBjD,WAAoBD,GAApB,SAAAE,EAAA,sEACQC,MAAM,GAAD,OAAIC,wBAAJ,eAAgD,CACzDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEX,KAAIE,YAJ/B,OAMEC,EAASD,GANX,4CAhBiD,sBAyBjD,OArBAU,qBAAU,WACR,IAAMC,EAAc,IAAIC,YAAJ,UACfR,wBADe,6BACmCS,mBAAmBlB,KAO1E,OALAgB,EAAYG,UAAY,SAAAC,GACtBhB,EAAMS,KAAKQ,MAAMD,EAAME,OACvBhB,KAGK,kBAAMU,EAAYO,WACxB,CAACvB,IAYF,8CAAKD,UAAWyB,IAAWzB,IAAgBE,GAA3C,cACGY,KAAKC,UAAUT,GACf,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGoB,KAAI,SAAAC,GAAM,OAC5B,wBAEEC,KAAK,SACLC,MAAOF,IAAWrB,EAAQ,CAAEwB,WAAY,cAAYC,EACpDC,QAAS,kBAjCgC,2CAiC1BC,CAAKN,IACpBO,cAAoBH,IAAVzB,EALZ,SAOGqB,GANIA,WCMAQ,MApCf,YAA0D,IAArCnC,EAAoC,EAApCA,UAAWoC,EAAyB,EAAzBA,aAAiBlC,EAAQ,8CACjBC,mBAAS,IADQ,mBAChDkC,EADgD,KACnCC,EADmC,KAEjDC,EAAWC,mBAoBjB,OAlBAxB,qBAAU,WACR,IAAMC,EAAc,IAAIC,YAAJ,UAAmBR,wBAAnB,eAKpB,OAJAO,EAAYG,UAAY,SAAAC,GACtBiB,EAAexB,KAAKQ,MAAMD,EAAME,QAG3B,kBAAMN,EAAYO,WACxB,IAYD,8CAAKxB,UAAWyB,IAAWzB,IAAgBE,GAA3C,cACE,uBAAMuC,SAXV,SAAsBpB,GACpBA,EAAMqB,iBACNN,EAAaG,EAASI,QAAQrC,QAS5B,UACE,uBAAOsC,IAAKL,EAAUtC,KAAK,OAAO2B,KAAK,SACvC,wBAAQA,KAAK,SAAb,4BAEDd,KAAKC,UAAUsB,GAChB,wBAAQT,KAAK,SAASI,QAX1B,WACEvB,MAAM,GAAD,OAAIC,wBAAJ,UAA2C,CAAEC,OAAQ,UAUxD,wBCtBSkC,MANf,WAAgB,IAAD,EACW1C,mBAAS,IADpB,mBACNF,EADM,KACA6C,EADA,KAGb,OAAO7C,EAAO,cAAC,EAAD,CAAaA,KAAMA,IAAW,cAAC,EAAD,CAAWmC,aAAcU,K,MCFvEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.60f028c3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nfunction Participant({ className, name, ...rest }) {\n  const [id, setId] = useState(0);\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    const eventSource = new EventSource(\n      `${process.env.REACT_APP_API_URL}/participant?name=${encodeURIComponent(name)}`,\n    );\n    eventSource.onmessage = event => {\n      setId(JSON.parse(event.data));\n      setValue();\n    };\n\n    return () => eventSource.close();\n  }, [name]);\n\n  async function send(value) {\n    await fetch(`${process.env.REACT_APP_API_URL}/estimation`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id, value }),\n    });\n    setValue(value);\n  }\n\n  return (\n    <div className={classNames(className)} {...rest}>\n      {JSON.stringify(value)}\n      {[0, 1, 2, 3, 5, 8].map(option => (\n        <button\n          key={option}\n          type=\"button\"\n          style={option === value ? { background: 'green' } : undefined}\n          onClick={() => send(option)}\n          disabled={value !== undefined}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Participant;\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nfunction Spectator({ className, onSubmitName, ...rest }) {\n  const [estimations, setEstimations] = useState([]);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const eventSource = new EventSource(`${process.env.REACT_APP_API_URL}/spectator`);\n    eventSource.onmessage = event => {\n      setEstimations(JSON.parse(event.data));\n    };\n\n    return () => eventSource.close();\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onSubmitName(inputRef.current.value);\n  }\n\n  function reset() {\n    fetch(`${process.env.REACT_APP_API_URL}/reset`, { method: 'POST' });\n  }\n\n  return (\n    <div className={classNames(className)} {...rest}>\n      <form onSubmit={handleSubmit}>\n        <input ref={inputRef} name=\"name\" type=\"text\" />\n        <button type=\"submit\">participate</button>\n      </form>\n      {JSON.stringify(estimations)}\n      <button type=\"button\" onClick={reset}>\n        reset\n      </button>\n    </div>\n  );\n}\n\nexport default Spectator;\n","import React, { useState } from 'react';\nimport Participant from '../Participant';\nimport Spectator from '../Spectator';\n\nfunction App() {\n  const [name, setName] = useState('');\n\n  return name ? <Participant name={name} /> : <Spectator onSubmitName={setName} />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}