{"version":3,"sources":["components/DarkModeToggle/DarkModeToggle.tsx","components/Card/Card.tsx","components/Participant/Participant.tsx","utils/generateName.ts","components/Rooms/Rooms.tsx","components/Spectator/reset.svg","components/Spectator/Spectator.tsx","components/App/App.tsx","index.tsx"],"names":["DarkModeToggle","className","rest","useState","document","documentElement","classList","contains","on","setOn","type","classNames","onClick","localStorage","theme","remove","add","Card","filled","Participant","useParams","roomId","name","id","setId","estimate","setEstimate","a","fetch","process","method","headers","body","JSON","stringify","useEffect","eventSource","EventSource","onmessage","event","parse","data","undefined","close","map","option","send","config","dictionaries","adjectives","animals","separator","generateName","uniqueNamesGenerator","Rooms","_path","navigate","useNavigate","rooms","setRooms","Boolean","length","room","spectators","participants","participant","to","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgReset","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","d","ForwardRef","Spectator","setParticipants","inputRef","useRef","gotAllParticipants","every","onSubmit","preventDefault","current","value","placeholder","App","path","element","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.513ccbdd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useState } from 'react';\n\nexport interface DarkModeToggleProps extends React.ComponentPropsWithoutRef<'button'> {}\n\nfunction DarkModeToggle({ className, ...rest }: DarkModeToggleProps) {\n  const [on, setOn] = useState(document.documentElement.classList.contains('dark'));\n\n  function toggleDarkMode() {\n    if (on) {\n      setOn(false);\n      localStorage.theme = 'light';\n      document.documentElement.classList.remove('dark');\n    } else {\n      setOn(true);\n      localStorage.theme = 'dark';\n      document.documentElement.classList.add('dark');\n    }\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        className,\n        'absolute top-4 right-4 w-16 h-8 rounded-full border-2 border-yellow-300 dark:border-gray-500 focus:outline-none transition duration-300',\n      )}\n      onClick={toggleDarkMode}\n      {...rest}\n    >\n      <span className={classNames('absolute top-0 right-2 leading-7', !on && 'hidden')}>üåô</span>\n      <span className={classNames('absolute top-0 left-2 leading-7', on && 'hidden')}>‚òÄÔ∏è</span>\n      <span\n        className={classNames(\n          'absolute top-1 left-1 h-5 w-5 rounded-full border-2 border-yellow-300 bg-yellow-100 dark:border-gray-500 dark:bg-gray-400 transform duration-300 transition',\n          !on && 'translate-x-8',\n        )}\n      />\n    </button>\n  );\n}\n\nexport default DarkModeToggle;\n","import classNames from 'classnames';\n\nexport interface CardProps extends React.ComponentPropsWithoutRef<'button'> {\n  filled?: boolean;\n}\n\nfunction Card({ className, filled, ...rest }: CardProps) {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        className,\n        'w-44 h-64 flex flex-col items-center justify-center border-indigo-500 border-4 rounded-3xl text-10xl font-serif focus:outline-none',\n        filled ? 'bg-indigo-500 text-white' : 'text-indigo-500 dark:bg-gray-900',\n      )}\n      {...rest}\n    />\n  );\n}\n\nexport default Card;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Card from '../Card';\n\nfunction Participant() {\n  const { roomId, name } = useParams();\n  const [id, setId] = useState(0);\n  const [estimate, setEstimate] = useState<number | undefined>();\n\n  useEffect(() => {\n    const eventSource = new EventSource(\n      `${process.env.REACT_APP_API_URL}/${roomId}/participant?name=${name}`,\n    );\n    eventSource.onmessage = event => {\n      setId(JSON.parse(event.data));\n      setEstimate(undefined);\n    };\n\n    return () => eventSource.close();\n  }, [roomId, name]);\n\n  async function send(estimate: number) {\n    await fetch(`${process.env.REACT_APP_API_URL}/${roomId}/estimation`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id, estimate }),\n    });\n    setEstimate(estimate);\n  }\n\n  return (\n    <div className=\"h-full flex items-center justify-center\">\n      {[0, 1, 2, 3, 5, 8].map(option => (\n        <Card\n          key={option}\n          className=\"mx-4\"\n          onClick={() => send(option)}\n          filled={option === estimate}\n        >\n          {option}\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Participant;\n","import { adjectives, animals, uniqueNamesGenerator } from 'unique-names-generator';\n\nconst config = {\n  dictionaries: [adjectives, animals],\n  separator: '-',\n};\n\nexport default function generateName() {\n  return uniqueNamesGenerator(config);\n}\n","import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport generateName from '../../utils/generateName';\nimport Card from '../Card';\n\ninterface Room {\n  id: number;\n  spectators: Array<{}>;\n  participants: Array<{ id: number; name: string }>;\n}\n\nfunction Rooms() {\n  const navigate = useNavigate();\n  const [rooms, setRooms] = useState<Room[]>([]);\n\n  useEffect(() => {\n    const eventSource = new EventSource(`${process.env.REACT_APP_API_URL}/guest`);\n    eventSource.onmessage = event => {\n      setRooms(JSON.parse(event.data));\n    };\n\n    return () => eventSource.close();\n  }, []);\n\n  return (\n    <div className=\"h-full flex flex-col items-center justify-center\">\n      {Boolean(rooms?.length) ? (\n        <>\n          <p className=\"text-4xl\">Join a room</p>\n          <div className=\"my-16 flex items-end\">\n            {rooms.map(room => (\n              <div key={room.id} className=\"mx-4 flex flex-col w-44\">\n                <p className=\"mb-2 text-center\">{room.id}</p>\n                <Card onClick={() => navigate(`/${room.id}`)}>\n                  {room.spectators.length > 0 && (\n                    <p className=\"text-sm mb-4\">\n                      {room.spectators.length}{' '}\n                      {room.spectators.length === 1 ? 'Spectator' : 'Spectators'}\n                    </p>\n                  )}\n                  {room.participants.map(participant => (\n                    <p key={participant.id} className=\"text-sm\">\n                      {participant.name}\n                    </p>\n                  ))}\n                </Card>\n              </div>\n            ))}\n          </div>\n          <p className=\"text-4xl\">\n            Or{' '}\n            <Link className=\"text-indigo-500\" to={`/${generateName()}`}>\n              create a new one\n            </Link>\n          </p>\n        </>\n      ) : (\n        <p className=\"text-4xl\">\n          <Link className=\"text-indigo-500\" to={`/${generateName()}`}>\n            Create a room\n          </Link>{' '}\n          to start estimating\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default Rooms;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgReset(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.5 2c-5.288 0-9.649 3.914-10.377 9h-3.123l4 5.917 4-5.917h-2.847c.711-3.972 4.174-7 8.347-7 4.687 0 8.5 3.813 8.5 8.5s-3.813 8.5-8.5 8.5c-3.015 0-5.662-1.583-7.171-3.957l-1.2 1.775c1.916 2.536 4.948 4.182 8.371 4.182 5.797 0 10.5-4.702 10.5-10.5s-4.703-10.5-10.5-10.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReset);\nexport default __webpack_public_path__ + \"static/media/reset.1b0da0de.svg\";\nexport { ForwardRef as ReactComponent };","import { FormEvent, useEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Card from '../Card';\nimport { ReactComponent as ResetIcon } from './reset.svg';\n\ninterface Participant {\n  id: number;\n  name: string;\n  estimate?: number;\n}\n\nfunction Spectator() {\n  const navigate = useNavigate();\n  const { roomId } = useParams();\n  const [participants, setParticipants] = useState<Participant[]>([]);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const eventSource = new EventSource(`${process.env.REACT_APP_API_URL}/${roomId}/spectator`);\n    eventSource.onmessage = event => {\n      setParticipants(JSON.parse(event.data));\n    };\n\n    return () => eventSource.close();\n  }, [roomId]);\n\n  function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    navigate(`/${roomId}/${inputRef.current?.value ?? ''}`);\n  }\n\n  function reset() {\n    fetch(`${process.env.REACT_APP_API_URL}/${roomId}/reset`, { method: 'POST' });\n  }\n\n  const gotAllParticipants = participants.every(({ estimate }) => typeof estimate === 'number');\n\n  return (\n    <div className=\"h-full flex flex-col items-center justify-evenly\">\n      <form className=\"flex\" onSubmit={handleSubmit}>\n        <input\n          className=\"rounded-l-lg border-green-500 border-2 text-gray-900 focus:outline-none\"\n          ref={inputRef}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        <button\n          className=\"rounded-r-lg bg-green-500 px-8 text-white font-bold focus:outline-none\"\n          type=\"submit\"\n        >\n          Join\n        </button>\n      </form>\n      <div className=\"flex\">\n        {participants.length === 0 && <p>No one has joined yet.</p>}\n        {participants.map(participant => (\n          <div key={participant.id}>\n            <Card className=\"mx-4\" filled={typeof participant.estimate === 'number'}>\n              {gotAllParticipants && participant.estimate}\n            </Card>\n            <p className=\"mt-4 text-xl text-center\">{participant.name}</p>\n          </div>\n        ))}\n      </div>\n      <button className=\"focus:outline-none\" type=\"button\" onClick={reset}>\n        <ResetIcon className=\"w-8 h-8 text-green-500 fill-current\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Spectator;\n","import { Route, Routes } from 'react-router-dom';\nimport DarkModeToggle from '../DarkModeToggle';\nimport Participant from '../Participant';\nimport Rooms from '../Rooms';\nimport Spectator from '../Spectator';\n\nfunction App() {\n  return (\n    <>\n      <Routes>\n        <Route path=\":roomId\" element={<Spectator />} />\n        <Route path=\":roomId/:name\" element={<Participant />} />\n        <Route path=\"*\" element={<Rooms />} />\n      </Routes>\n      <DarkModeToggle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/scrumpoker\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}