{"version":3,"sources":["components/DarkModeToggle/DarkModeToggle.js","components/Card/Card.js","components/Participant/Participant.js","components/Spectator/reset.svg","components/Spectator/Spectator.js","components/Room/Room.js","components/Rooms/Rooms.js","components/App/App.js","index.js"],"names":["DarkModeToggle","className","rest","useState","document","documentElement","classList","contains","on","setOn","type","classNames","onClick","localStorage","theme","remove","add","Card","filled","Participant","roomId","name","id","setId","value","setValue","estimate","a","fetch","process","method","headers","body","JSON","stringify","useEffect","eventSource","EventSource","encodeURIComponent","onmessage","event","parse","data","close","map","option","send","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgReset","_ref","svgRef","title","titleId","props","width","height","viewBox","ref","ForwardRef","Spectator","onSubmitName","participants","setParticipants","inputRef","useRef","gotAllParticipants","every","onSubmit","preventDefault","current","placeholder","participant","Room","setName","Rooms","onSubmitRoomId","rooms","setRooms","Boolean","room","spectators","Date","now","App","setRoomId","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b79a3ce.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\n\nfunction DarkModeToggle({ className, ...rest }) {\n  const [on, setOn] = useState(document.documentElement.classList.contains('dark'));\n\n  function toggleDarkMode() {\n    if (on) {\n      setOn(false);\n      localStorage.theme = 'light';\n      document.documentElement.classList.remove('dark');\n    } else {\n      setOn(true);\n      localStorage.theme = 'dark';\n      document.documentElement.classList.add('dark');\n    }\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        className,\n        'absolute top-4 right-4 w-16 h-8 rounded-full border-2 border-yellow-300 dark:border-gray-500 focus:outline-none transition duration-300',\n      )}\n      onClick={toggleDarkMode}\n      {...rest}\n    >\n      <span className={classNames('absolute top-0 right-2 leading-7', !on && 'hidden')}>üåô</span>\n      <span className={classNames('absolute top-0 left-2 leading-7', on && 'hidden')}>‚òÄÔ∏è</span>\n      <span\n        className={classNames(\n          'absolute top-1 left-1 h-5 w-5 rounded-full border-2 border-yellow-300 bg-yellow-100 dark:border-gray-500 dark:bg-gray-400 transform duration-300 transition',\n          !on && 'translate-x-8',\n        )}\n      />\n    </button>\n  );\n}\n\nexport default DarkModeToggle;\n","import classNames from 'classnames';\nimport React from 'react';\n\nfunction Card({ className, filled, ...rest }) {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        className,\n        'mx-4 w-44 h-64 flex flex-col items-center justify-center border-indigo-500 border-4 rounded-3xl text-10xl font-serif focus:outline-none',\n        filled ? 'bg-indigo-500 text-white' : 'text-indigo-500 dark:bg-gray-900',\n      )}\n      {...rest}\n    />\n  );\n}\n\nexport default Card;\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card';\n\nfunction Participant({ className, roomId, name, ...rest }) {\n  const [id, setId] = useState(0);\n  const [value, setValue] = useState();\n\n  useEffect(() => {\n    const eventSource = new EventSource(\n      `${process.env.REACT_APP_API_URL}/${roomId}/participant?name=${encodeURIComponent(name)}`,\n    );\n    eventSource.onmessage = event => {\n      setId(JSON.parse(event.data));\n      setValue();\n    };\n\n    return () => eventSource.close();\n  }, [roomId, name]);\n\n  async function send(estimate) {\n    await fetch(`${process.env.REACT_APP_API_URL}/${roomId}/estimation`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id, estimate }),\n    });\n    setValue(estimate);\n  }\n\n  return (\n    <div className={classNames(className, 'h-full flex items-center justify-center')} {...rest}>\n      {[0, 1, 2, 3, 5, 8].map(option => (\n        <Card key={option} onClick={() => send(option)} filled={option === value}>\n          {option}\n        </Card>\n      ))}\n    </div>\n  );\n}\n\nexport default Participant;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.5 2c-5.288 0-9.649 3.914-10.377 9h-3.123l4 5.917 4-5.917h-2.847c.711-3.972 4.174-7 8.347-7 4.687 0 8.5 3.813 8.5 8.5s-3.813 8.5-8.5 8.5c-3.015 0-5.662-1.583-7.171-3.957l-1.2 1.775c1.916 2.536 4.948 4.182 8.371 4.182 5.797 0 10.5-4.702 10.5-10.5s-4.703-10.5-10.5-10.5z\"\n});\n\nfunction SvgReset(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgReset);\nexport default __webpack_public_path__ + \"static/media/reset.1b0da0de.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Card from '../Card';\nimport { ReactComponent as ResetIcon } from './reset.svg';\n\nfunction Spectator({ className, roomId, onSubmitName, ...rest }) {\n  const [participants, setParticipants] = useState([]);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const eventSource = new EventSource(`${process.env.REACT_APP_API_URL}/${roomId}/spectator`);\n    eventSource.onmessage = event => {\n      setParticipants(JSON.parse(event.data));\n    };\n\n    return () => eventSource.close();\n  }, [roomId]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onSubmitName(inputRef.current.value);\n  }\n\n  function reset() {\n    fetch(`${process.env.REACT_APP_API_URL}/${roomId}/reset`, { method: 'POST' });\n  }\n\n  const gotAllParticipants = participants.every(({ estimate }) => typeof estimate === 'number');\n\n  return (\n    <div\n      className={classNames(className, 'h-full flex flex-col items-center justify-evenly')}\n      {...rest}\n    >\n      <form className=\"flex\" onSubmit={handleSubmit}>\n        <input\n          className=\"rounded-l-lg border-green-500 border-2 focus:outline-none\"\n          ref={inputRef}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n        />\n        <button\n          className=\"rounded-r-lg bg-green-500 px-8 text-white font-bold focus:outline-none\"\n          type=\"submit\"\n        >\n          Participate\n        </button>\n      </form>\n      <div className=\"flex\">\n        {participants.length === 0 && <p>No one has joined yet.</p>}\n        {participants.map(participant => (\n          <div key={participant.id}>\n            <Card filled={typeof participant.estimate === 'number'}>\n              {gotAllParticipants && participant.estimate}\n            </Card>\n            <p className=\"mt-4 text-xl text-center\">{participant.name}</p>\n          </div>\n        ))}\n      </div>\n      <button className=\"focus:outline-none\" type=\"button\" onClick={reset}>\n        <ResetIcon className=\"w-8 h-8 text-green-500 fill-current\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Spectator;\n","import React, { useState } from 'react';\nimport Participant from '../Participant';\nimport Spectator from '../Spectator';\n\nfunction Room({ roomId }) {\n  const [name, setName] = useState('');\n\n  return name ? (\n    <Participant roomId={roomId} name={name} />\n  ) : (\n    <Spectator roomId={roomId} onSubmitName={setName} />\n  );\n}\n\nexport default Room;\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card';\n\nfunction Rooms({ className, onSubmitRoomId, ...rest }) {\n  const [rooms, setRooms] = useState();\n\n  useEffect(() => {\n    const eventSource = new EventSource(`${process.env.REACT_APP_API_URL}/guest`);\n    eventSource.onmessage = event => {\n      setRooms(JSON.parse(event.data));\n    };\n\n    return () => eventSource.close();\n  }, []);\n\n  return (\n    <div\n      className={classNames(className, 'h-full flex flex-col items-center justify-center')}\n      {...rest}\n    >\n      <p className=\"text-4xl\">\n        {Boolean(rooms?.length)\n          ? 'Choose a room or create a new one'\n          : 'Create a room to start estimating'}\n      </p>\n      <div className=\"mt-24 flex\">\n        {rooms?.map(room => (\n          <Card key={room.id} onClick={() => onSubmitRoomId(room.id)}>\n            {room.spectators.length > 0 && (\n              <p className=\"text-sm mb-4\">\n                {room.spectators.length} {room.spectators.length === 1 ? 'Spectator' : 'Spectators'}\n              </p>\n            )}\n            {room.participants.map(participant => (\n              <p key={participant.id} className=\"text-sm\">\n                {participant.name}\n              </p>\n            ))}\n          </Card>\n        ))}\n        <Card onClick={() => onSubmitRoomId(Date.now())}>+</Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Rooms;\n","import React, { useState } from 'react';\nimport DarkModeToggle from '../DarkModeToggle';\nimport Room from '../Room';\nimport Rooms from '../Rooms';\n\nfunction App() {\n  const [roomId, setRoomId] = useState();\n\n  return (\n    <>\n      {roomId ? <Room roomId={roomId} /> : <Rooms onSubmitRoomId={setRoomId} />}\n      <DarkModeToggle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}